cmake_minimum_required(VERSION 3.6)
project(sergiotest)

set(CMAKE_CXX_STANDARD 14)
add_subdirectory(lib/googletest)
include_directories(lib/googletest/googletest/include)
include_directories(lib/googletest/googlemock/include)

set(SOURCE_FILES main.cpp cracking_code_interview/solutions1.h cracking_code_interview/solutions1.cpp DataStructures/JRLinkedList/JRLinkedList.h DataStructures/JRLinkedList/JRLinkedListNode.h Tests/JRLinkedList/Test_JRLinkedList.cpp DataStructures/JRStack/StackNode.cpp DataStructures/JRStack/StackNode.h DataStructures/JRStack/Stack.cpp DataStructures/JRStack/Stack.h Tests/JRStack/Test_Stack.cpp DataStructures/JRQueue/Queue.cpp DataStructures/JRQueue/Queue.h DataStructures/JRDoublyLinkedList/DoublyLinkedList.h Algorithms/Search.cpp Algorithms/Search.h Tests/Test_Algorithms/Test_BinarySearch.cpp cracking_code_interview/4.8.FirstCommonAncestor.h Tests/Test_Solutions/Test_FirstCommonAncestor.cpp Tests/Test_Solutions/InterviewProblems/Test_BreakIntoWords.cpp InterviewProblems/BreakIntoWords/BreakIntoWords.h InterviewProblems/BreakIntoWords/BreakIntoWords.cpp InterviewProblems/MinesweeperBoard/Matrix.h InterviewProblems/MinesweeperBoard/MinesweeperBoard.cpp InterviewProblems/MinesweeperBoard/MinesweeperBoard.h Tests/Test_Solutions/InterviewProblems/Test_MinesweeperBoard/Test_MinesweeperBoard.cpp Tests/Test_Solutions/InterviewProblems/Test_MinesweeperBoard/Test_MinesweeperMatrix.cpp Algorithms/GreatestCommonDivisor/GreatestCommonDivisor.cpp Algorithms/GreatestCommonDivisor/GreatestCommonDivisor.h Tests/Test_Algorithms/Test_GreatestCommonDivisor.cpp cracking_code_interview/8.5.RecursiveMultiply/RecursiveMultiply.cpp cracking_code_interview/8.5.RecursiveMultiply/RecursiveMultiply.h Tests/Test_Solutions/CrackingTheCodeInterview/Test_RecursiveMultiply.cpp InterviewProblems/SumOfSubarrays/SumOfSubarrays.cpp InterviewProblems/SumOfSubarrays/SumOfSubarrays.h Tests/Test_Solutions/InterviewProblems/SumOfSubarrays/Test_SumOfContiguousSubarrays.cpp InterviewProblems/MaxStockProfit_LC714/LC714.cpp InterviewProblems/MaxStockProfit_LC714/LC714.h cracking_code_interview/8.8.PermutationsWithoutDups/PermutationsWithoutDups.cpp cracking_code_interview/8.8.PermutationsWithoutDups/PermutationsWithoutDups.h Tests/Test_Solutions/CrackingTheCodeInterview/Test_PermutationsWithoutDups.cpp DataStructures/JRVector/JRVector.h InterviewProblems/UniquePaths_LC62/UniquePaths_LC62.cpp InterviewProblems/UniquePaths_LC62/UniquePaths_LC62.h)
add_executable(sergiotest ${SOURCE_FILES})

target_link_libraries(sergiotest gtest gtest_main)